var Component=(()=>{var a=Object.create;var i=Object.defineProperty;var l=Object.getOwnPropertyDescriptor;var d=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var o=r=>i(r,"__esModule",{value:!0});var m=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),f=(r,e)=>{o(r);for(var n in e)i(r,n,{get:e[n],enumerable:!0})},b=(r,e,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let h of d(e))!u.call(r,h)&&h!=="default"&&i(r,h,{get:()=>e[h],enumerable:!(n=l(e,h))||n.enumerable});return r},g=r=>b(o(i(r!=null?a(p(r)):{},"default",r&&r.__esModule&&"default"in r?{get:()=>r.default,enumerable:!0}:{value:r,enumerable:!0})),r);var c=m((I,s)=>{s.exports=_jsx_runtime});var y={};f(y,{default:()=>x,description:()=>j,title:()=>w,type:()=>k});var t=g(c()),w="My projects",j="A list of projects that I've worked on over the years.",k="garden";function v(r){let e=Object.assign({p:"p",h2:"h2",a:"a"},r.components),{wrapper:n}=e,h=(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.p,{children:"Just a few public projects that I've worked on over the year. The rest are on the cutting room floor."}),`
`,(0,t.jsx)(e.h2,{children:(0,t.jsx)(e.a,{href:"https://github.com/bennetthardwick/recoil-clone",children:"Recoil Clone"})}),`
`,(0,t.jsxs)(e.p,{children:["A Recoil clone written in under 100 lines. I created this for the ",(0,t.jsx)(e.a,{href:"./recoil-from-scratch",children:"Rewriting Recoil from scratch"})," post."]}),`
`,(0,t.jsx)(e.h2,{children:(0,t.jsx)(e.a,{href:"https://simple-dev-blog-zola-starter.netlify.app/",children:"Simple Dev Blog Zola Theme"})}),`
`,(0,t.jsx)(e.p,{children:"A Zola theme that is meant to replace simple Gatsby blogs by prerendering links and including all the basics needed for SEO. It used to be the theme powering this blog."}),`
`,(0,t.jsx)(e.h2,{children:(0,t.jsx)(e.a,{href:"https://github.com/bennetthardwick/rust-obs-plugins",children:"Rust OBS Wrapper"})}),`
`,(0,t.jsx)(e.p,{children:"A safe Rust wrapper around the OBS API. I use this to creating OBS sources, filters, transitions and effects."}),`
`,(0,t.jsx)(e.h2,{children:(0,t.jsx)(e.a,{href:"https://github.com/bennetthardwick/darknet.js",children:"Darknet.js"})}),`
`,(0,t.jsxs)(e.p,{children:["A Node.js wrapper of ",(0,t.jsx)(e.a,{href:"https://pjreddie.com/",children:"pjreddie''s"})," open source neural network framework Darknet."]}),`
`,(0,t.jsx)(e.h2,{children:(0,t.jsx)(e.a,{href:"https://github.com/bennetthardwick/gruvbox-gtk",children:"Gruvbox GTK"})}),`
`,(0,t.jsxs)(e.p,{children:["A simple GTK theme based on ",(0,t.jsx)(e.a,{href:"https://github.com/horst3180/arc-theme",children:"Arc"})," but with Gruvbox colours. I've also created the matching ",(0,t.jsx)(e.a,{href:"https://github.com/bennetthardwick/gruvbox-arc-icon-theme",children:"icon theme"}),";"]}),`
`,(0,t.jsx)(e.h2,{children:(0,t.jsx)(e.a,{href:"https://github.com/bennetthardwick/dotfiles",children:"Dotfiles"})}),`
`,(0,t.jsx)(e.p,{children:`An ongoing attempt to make myself an ultra-productive Linux user.
I use my dotfiles to store my theme as well as useful scripts that I've built over the years.`})]});return n?(0,t.jsx)(n,Object.assign({},r,{children:h})):h}var x=v;return y;})();
